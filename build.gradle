/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.6/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.1'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation 'commons-io:commons-io:2.11.0'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

application {
    // Define the main class for the application.
    mainClass = 'CS0445A2'
}

task Words(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'Words'
}

task ArrayListProgram(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'ArrayListProgram'
}

task ArrayProgram(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'ArrayProgram'
}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    testLogging.showStandardStreams = true
}

